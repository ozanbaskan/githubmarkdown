{"version":3,"sources":["reportWebVitals.js","markdownEditor.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","marked","setOptions","breaks","MarkdownEditor","props","state","value","placeHolder","handleChange","bind","event","this","setState","target","className","onChange","type","id","dangerouslySetInnerHTML","__html","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCHdQ,IAAOC,WAAW,CAChBC,QAAQ,I,IAGJC,E,kDACF,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAOC,GAGT,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,yDASLC,GACZC,KAAKC,SAAS,CACZN,MAAOI,EAAMG,OAAOP,U,+BAMtB,OACA,qBAAKQ,UAAU,yCAAf,SACE,sBAAKA,UAAU,oBAAf,UACA,oBAAIA,UAAU,cAAd,8CACA,qBAAKA,UAAU,UAAf,oBACA,0BAAUA,UAAU,GACpBR,MAAOK,KAAKN,MAAMC,MAClBS,SAAUJ,KAAKH,aACfQ,KAAK,OACLC,GAAG,WAEH,wBACA,qBAAKH,UAAU,UAAf,oBACA,qBAAKG,GAAG,UAAUC,wBAAyB,CAAEC,OAAQnB,IAAOW,KAAKN,MAAMC,mB,GA/BlDc,IAAMC,WAuC3Bd,EAAW,4wBAgCFJ,ICzEjBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnC,M","file":"static/js/main.bb370d65.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport marked from 'marked';\r\n\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\n\r\nclass MarkdownEditor extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        value: placeHolder\r\n      };\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n    \r\n    }\r\n    handleChange (event) {\r\n      this.setState({\r\n        value: event.target.value\r\n      })\r\n    }\r\n    \r\n    render() {\r\n\r\n      return (\r\n      <div className='container h-100 justify-content-center'>\r\n        <div className='jumbotron my-auto'>\r\n        <h1 className='text-center'>My Markdown Previewer For GitHub</h1>\r\n        <div className='headers'>Editor</div>\r\n        <textarea className=''\r\n        value={this.state.value}\r\n        onChange={this.handleChange}\r\n        type='text'\r\n        id='editor'\r\n        ></textarea>\r\n        <div />\r\n        <div className='headers'>Viewer</div>\r\n        <div id=\"preview\" dangerouslySetInnerHTML={{ __html: marked(this.state.value) }}/>\r\n        \r\n        </div> \r\n      </div>\r\n\r\n      )\r\n    }\r\n  }\r\n  const placeHolder = `# Here is my react markdown previewer for GitHub markdown syntax!\r\n\r\n  ## This is a heading\r\n  ### And more:\r\n  \r\n  Here is some code, \\`<div></div>\\`, between 2 backticks.\r\n  \r\n  \\`\\`\\`\r\n  // this is multi-line code:\r\n  \r\n  function anotherExample(firstLine, lastLine) {\r\n    if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n      return multiLineCode;\r\n    }\r\n  }\r\n  \\`\\`\\`\r\n  \r\n  You can also make text **bold**!\r\n  Or _italic_.\r\n  Or... wait for it... **_both!_**\r\n  And feel free to ~~cross stuff out~~.\r\n  \r\n  There are also [links](https://www.freecodecamp.com), and\r\n  > Block Quotes!\r\n  \r\n\r\n  1. And there are numbererd lists too.\r\n  1. Use just 1s if you want!\r\n  1. And last but not least, let's not forget embedded images:\r\n  \r\n  ![React Logo w/ Text](https://goo.gl/Umyytc)`;\r\n\r\n  export default MarkdownEditor;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MarkdownEditor from './markdownEditor';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MarkdownEditor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}